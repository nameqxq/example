server:
  port: 9999
  tomcat:
    uri-encoding: utf-8

spring:
  redis:
    host: 101.236.43.161
    port: 6379
    password: u2CVLsHGYn4dVh6M4qTMr17iaQk
    pool:
      max-wait: 10000
    database: 2
  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physicalStrategy: test.quxiqi.sharding.sphere.config.LaimiNamingStrategy
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  shardingsphere:
    datasource:
      name: ds
      ds:
        driverClassName: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://rds.aliyun.dev.51dinghuo.cc/test?useUnicode=true&characterEncoding=UTF-8
        username: laimi_develop
        type: com.zaxxer.hikari.HikariDataSource
        password: KVapw0e0wfOUB145
    sharding:
      defaultDataSourceName: ds
      tables:
        example:
          logicTable: example
          actualDataNodes: ds.example_${0..1}
          tableStrategy:
#            standard:
#              shardingColumn: id
#              preciseAlgorithmClassName: test.quxiqi.sharding.sphere.config.sharding.ExampleTableStrategy
            complex:
              shardingColumns: id,create_time
              algorithmClassName: test.quxiqi.sharding.sphere.config.sharding.ExampleComplexAlgorithm
          keyGenerator:
            type: REDIS
            column: id
            props:
              logicTableName: example
        employee:
          logicTable: employee
          actualDataNodes: ds.employee_${0..1}
          tableStrategy:
            inline:
              shardingColumn: id
              algorithmExpression: employee_${id % 2}
          keyGenerator:
            type: REDIS
            column: id
            props:
              logicTableName: employee
      defaultKeyGenerator:
        type: SNOWFLAKE
        column: id
    props:
      sql.show: true